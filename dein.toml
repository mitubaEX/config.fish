[[plugins]]
repo = 'Shougo/dein.vim'
hook_post_update = 'UpdateRemotePlugins'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'tyru/caw.vim'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let g:go_fmt_fail_silently = 1
  let g:ale_fix_on_save = 1
  " let g:neomake_javascript_enabled_makers = ['tslint', 'eslint', 'flow']

  " let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']
  function! ALEStatus()
    " return ALEGetStatusLine()
    let l:counts = ale#statusline#Count(bufnr(''))

    let l:all_errors = l:counts.error + l:counts.style_error
    let l:all_non_errors = l:counts.total - l:all_errors

    return l:counts.total == 0 ? 'OK' : printf(
		    \   '⚠ %d ⨉ %d',
		    \   all_non_errors,
		    \   all_errors
		    \)
  endfunction

  let g:ale_linters = {
  \   'javascript': ['eslint', 'prettier', 'flow'],
  \   'jsx': ['stylelint', 'eslint', 'prettier'],
  \   'tsx': ['tslint', 'prettier'],
  \   'hs': ['hlint'],
  \   'tex': ['alex']
  \}
  let g:ale_linter_aliases = {'jsx': 'css'}
  let g:ale_fixers = {
  \   'python': ['autopep8', 'isort'],
  \   'javascript': ['eslint', 'prettier'],
  \   'typescript': ['tslint', 'prettier'],
  \   'haskell': ['stylish-haskell']
  \}
  let g:ale_fix_on_save = 1
  let g:ale_javascript_prettier_options = '--single-quote --trailing-comma --arrow-parens always es5'
  let g:ale_set_loclist = 0
  " let g:ale_set_quickfix = 1
  " let g:ale_open_list = 1

  " エラーと警告がなくなっても開いたままにする
  " let g:ale_keep_list_window_open = 1
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  set noshowmode
  let g:lightline = {
        \'active': {
        \  'left': [
        \    ['mode', 'paste'],
        \    [ 'gitbranch', 'readonly', 'filename', 'modified' ],
        \    ['ale'],
        \  ],
        \  'right': [
        \    [ 'lineinfo' ],
        \    [ 'percent' ],
        \    [ 'fileformat', 'fileencoding', 'filetype', 'charvaluehex' ],
        \ ],
        \},
        \ 'component': {
        \   'charvaluehex': '0x%B'
        \ },
        \'component_function': {
        \  'ale': 'ALEStatus',
        \  'gitbranch': 'fugitive#head',
        \  'filename': 'LightLineFilename'
        \}
        \ }

  function! LightLineFilename()
    return expand('%')
  endfunction
'''

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
" ref: https://postd.cc/vim3/
nmap ; :Buffers<CR>
" nmap <Leader>t :Files<CR>
" nmap r :Tags<CR>
let g:fzf_history_dir = '~/.local/share/fzf-history'
let g:fzf_tags_command = 'ctags -R --exclude=.git --exclude=node_modules --exclude=test --exclude=spec --exclude=vendor'
'''

[[plugins]]
repo = 'tpope/vim-sleuth'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
set shell=/bin/bash
'''

[[plugins]]
repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'mitubaEX/codic-vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'

[[plugins]]
repo = 'maxbrunsfeld/vim-yankstack'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = {
\   'haskell' : { 'type' : 'haskell/stack' },
\   'haskell/stack' : {
\       'command' : 'stack',
\       'exec' : '%c %o %s %a',
\       'cmdopt' : 'runghc',
\   },
\}
'''

[[plugins]]
repo = 'AndrewRadev/linediff.vim'

[[plugins]]
repo = 'AndrewRadev/sideways.vim'

[[plugins]]
repo = 'Lokaltog/vim-easymotion'

[[plugins]]
repo = 'rhysd/github-complete.vim'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = ['kana/vim-operator-user']
hook_add = '''
" operator mappings
map <silent>sa <Plug>(operator-surround-append)
map <silent>sd <Plug>(operator-surround-delete)
map <silent>sr <Plug>(operator-surround-replace)

" saiw(: aaa -> (aaa)
'''

[[plugins]]
repo = 'rhysd/vim-grammarous'

[[plugins]]
repo = 'mhinz/vim-startify'
hook_add = '''

let g:startify_lists = [
\ { 'type': 'files',     'header': ['   MRU']            },
  \ { 'type': 'dir',       'header': ['   MRU '. getcwd()] },
  \ { 'type': 'sessions',  'header': ['   Sessions']       },
  \ { 'type': 'bookmarks', 'header': ['   Bookmarks']      },
  \ { 'type': 'commands',  'header': ['   Commands']       },
  \ ]
let g:startify_bookmarks = [ {'c': '~/.config/nvim/init.vim'}, '~/.zshrc' ]
'''

[[plugins]]
repo = 'kien/rainbow_parentheses.vim'

[[plugins]]
repo = 'kana/vim-smartinput'
hook_add = '''
'''

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'majutsushi/tagbar'

[[plugins]]
repo = 'basyura/twibill.vim'

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'basyura/TweetVim'
depends = ['basyura/twibill.vim', 'tyru/open-browser.vim']

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make -f make_mac.mak'

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]] # カーソル位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'
