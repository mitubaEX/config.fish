#deoplete
[[plugins]] # コード補完
repo = 'Shougo/deoplete.nvim'
on_event = ['InsertEnter']
hook_post_update = 'UpdateRemotePlugins'
hook_source = '''
let g:deoplete#enable_at_startup = 1

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('')[col - 1]  =~ '\s'
endfunction

call deoplete#custom#option('keyword_patterns', {
      \ '_': '[a-zA-Z_]\k*\(?',
      \ })
call deoplete#custom#option('camel_case', v:true)

" <TAB>: completion.
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ deoplete#manual_complete()

call deoplete#custom#source('_', 'converters', [
      \ 'converter_remove_paren',
      \ 'converter_remove_overlap',
      \ 'matcher_length',
      \ 'converter_truncate_abbr',
      \ 'converter_truncate_menu',
      \ 'converter_auto_delimiter',
      \ ])
'''

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
on_ft = ['go']
on_event = ['InsertEnter']
hook_post_update = 'UpdateRemotePlugins'
hook_source = '''
let g:LanguageClient_serverCommands = {
    \ 'go': ['gopls'],
    \ }
    " \ 'ruby': ['~/.rbenv/shims/solargraph', 'stdio'],
set completefunc=LanguageClient#complete
let g:LanguageClient_diagnosticsEnable = 0
let g:LanguageClient_selectionUI = 'fzf'
let g:LanguageClient_loggingLevel = 'INFO'
let g:LanguageClient_loggingFile =  expand('~/.local/share/nvim/LanguageClient.log')
let g:LanguageClient_serverStderr = expand('~/.local/share/nvim/LanguageServer.log')

" jump to method
nnoremap <silent> <C-y>d :call LanguageClient#textDocument_definition()<CR>

" check each reference
nnoremap <silent> <C-y>r :call LanguageClient#textDocument_references()<CR>
'''

# 動かない時は、yarn add global typescript, yarn add global neovimとかしたらrunする
[[plugins]]
repo = 'Quramy/tsuquyomi'
on_ft = ['typescript', 'tsx', 'typescrip.tsx']
hook_post_update = 'UpdateRemotePlugins'
hook_source = '''

" C-] jump definition

" check each reference
nnoremap <silent> <C-y>r :TsuReferences<CR>

'''
